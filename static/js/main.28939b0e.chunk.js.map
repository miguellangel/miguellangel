{"version":3,"sources":["components/WavySVG.js","components/NavBar.js","components/Intro.js","components/About.js","components/Skills.js","components/Projects.js","components/Contact.js","portrait.png","UT-Tower.png","nlp.png","components/Portfolio.js","App.js","serviceWorker.js","index.js"],"names":["WavySVG","isNav","fill","sectionSVGStatus","React","useRef","useEffect","anime","targets","keyframes","d","easing","duration","loop","direction","id","style","position","zIndex","viewBox","preserveAspectRatio","xmlns","dx","dy","stdDeviation","filter","partialVisibility","onChange","isVisible","current","className","NavBar","children","scrollToView","sectionId","document","querySelector","scrollIntoView","behavior","$","collapse","getElementById","previousElementSibling","trigger","Container","fluid","Navbar","bg","variant","collapseOnSelect","expand","fixed","Brand","Toggle","aria-controls","Collapse","Nav","activeKey","Item","Link","onClick","MainBody","portrait","Row","xs","md","Col","src","alt","About","tower","nlp","display","width","height","href","capitalize","s","charAt","toUpperCase","slice","Skills","skillset","skillMap","Object","keys","frontend","skills","map","skill","String","fillOpacity","strokeWidth","stroke","borderRadius","font","transform","toString","margin","padding","color","values","libraryMap","libraries","library","ProgressBar","Path","animate","Tabs","defaultActiveKey","Tab","eventKey","title","Projects","Contact","Portfolio","viewMode","debouncedStoreScroll","fn","ms","timer","_","clearTimeout","setTimeout","apply","arguments","debounce","documentElement","dataset","scroll","window","scrollY","addEventListener","Intro","withBreakpoints","breakpoints","currentBreakpoint","mobileLandscape","getElementsByTagName","setAttribute","Array","from","getElementsByClassName","sectionSVG","Boolean","location","hostname","match","ReactDOM","render","mobile","desktop","desktopLarge","desktopWide","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.28939b0e.chunk.js","sourcesContent":["import React from 'react';\nimport anime from 'animejs/lib/anime.es.js';\nimport ReactVisibilitySensor from 'react-visibility-sensor';\n\nconst WavySVG = ({isNav, fill}) => {\n\n    const sectionSVGStatus = React.useRef('hidden');\n\n\n    React.useEffect(() => {\n        if (isNav) {\n            anime({\n                targets: '#navSVGPath',\n                keyframes: [{d: 'M 0.0 30.0 C 127.5 40.5 127.5 15.0 255.0 27.75 C 382.5 40.5 382.5 15.0 600.0 30.0 L 600.0 0.0 L 0.0 0.0 L 0.0 30.0 '},\n                            ],\n                easing: 'easeInOutQuad',\n                duration: 1500,\n                loop: true,  \n                direction: 'alternate'\n            });\n\n        } else {\n            anime({\n                targets: '.sectionSVGPath',\n                keyframes: [{d: 'M 0 15 C 127.5 25.5 127.5 0.0 255.0 12.75 C 382.5 25.5 382.5 0.0 600 15 L 600 0 L 0 0 L 0 15'},\n                            ],\n                easing: 'easeInOutQuad',\n                duration: 1500,\n                loop: true,  \n                direction: 'alternate'\n            });\n\n        }\n          \n\n    })\n\n    if (isNav) {\n        return (<>\n            {/* navigation bar curve */}\n            <svg id=\"navCurveSVG\" style={{position : 'fixed', zIndex : '3'}} viewBox='0 0 600 60' preserveAspectRatio='none' xmlns=\"http://www.w3.org/2000/svg\">\n                <defs>\n                    <filter id=\"shadow\">\n                        <feDropShadow dx=\"0.05\" dy=\"0.1\" stdDeviation=\"0.75\"/>\n                    </filter>\n                </defs>\n                <g>\n                    <path id=\"navSVGPath\" d=\"M 0 30 C 150 45 150 15 300 30 C 450 45 450 15 600 30 L 600 0 L 0 0 L 0 30 \" style={{fill: \"transparent\", filter:\"url(#shadow)\"}}/>\n                </g>\n            </svg>\n            \n            {/* {children} */}\n        </>)\n    }\n    return (<>\n        {/* Section curve */}\n        <ReactVisibilitySensor partialVisibility onChange={(isVisible) => {sectionSVGStatus.current = isVisible ? 'visible' : 'hidden'}} >\n            <svg className=\"sectionCurveSVG\" style={{}} viewBox='0 0 600 30' preserveAspectRatio='none' xmlns=\"http://www.w3.org/2000/svg\">\n                <defs>\n                    <filter id=\"shadow\">\n                        <feDropShadow dx=\"0.05\" dy=\"0.1\" stdDeviation=\"0.75\"/>\n                    </filter>\n                </defs>\n                <g>\n                    <path className=\"sectionSVGPath\" d=\"M 0 15 C 150 30 150 0 300 15 C 450 30 450 0 600 15 L 600 0 L 0 0 L 0 15\" style={{fill: fill, filter:\"url(#shadow)\"}}/>\n                </g>\n            </svg>\n        </ReactVisibilitySensor>\n        \n        {/* {children} */}\n            \n    </>)\n}\n\nexport default WavySVG;","import React from 'react';\nimport {Navbar, Nav, Container} from 'react-bootstrap';\nimport $ from 'jquery';\n\n\n\nconst NavBar = ({children}) => {\n    const scrollToView = (sectionId) => {\n        document.querySelector(sectionId).scrollIntoView({\n            behavior: \"smooth\"\n        });\n\n        $('.navbar-collapse').collapse('toggle');\n        // trigger a click automatically so user does not end up having to click twice for nav to expand again\n        $(document.getElementById('responsive-navbar-nav').previousElementSibling).trigger('click');\n    };\n    React.useEffect( () => {\n    })\n    return (\n        <Container fluid=\"true\" id=\"navContainer\">\n            {children}\n            <Navbar id=\"pageNav\" bg = \"transparent\" variant = \"light\" collapseOnSelect={true} expand=\"lg\" fixed=\"top\">\n                <Container>\n                    <Navbar.Brand>miguellangel</Navbar.Brand>                \n\n                </Container>\n                <Navbar.Toggle bg=\"primary\" aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Container className=\"justify-content-end\">\n                        <Nav activeKey=\"/home\" >\n                            <Nav.Item>\n                                <Nav.Link onClick={() => scrollToView(\"#main\")} >HOME</Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item>\n                                <Nav.Link onClick={() => scrollToView(\"#about\")} >ABOUT</Nav.Link>\n                            </Nav.Item>\n                            <Nav.Link onClick={() => scrollToView(\"#skills\")} >SKILLS</Nav.Link>\n                            <Nav.Link onClick={() => scrollToView(\"#projects\")} >PROJECTS</Nav.Link>\n                            <Nav.Link onClick={() => scrollToView(\"#contact\")} >CONTACT</Nav.Link>\n                        </Nav>\n\n                    </Container>\n                </Navbar.Collapse>\n            </Navbar>\n        </Container>\n    )\n}\n\n\nexport default NavBar;","import React from 'react';\nimport {Row, Col} from \"react-bootstrap\";\n\nconst MainBody = ({portrait}) => {\n    return (\n        <section id=\"main\">\n            <Row  className=\"fullsize\" id=\"intro\" xs={1} md={2}>\n                <Col>\n                    {/* <Container style={{width: \"100%\", height: \"100%\"}}> */}\n                        <img id=\"portrait\" src={portrait} alt=\"This is me: Miguel Arriaga\" />\n                    {/* </Container> */}\n                </Col>\n                <Col>\n                    <h4 className=\"center el\">THIS IS ME</h4>\n                    <h1 className=\"center el\">MIGUEL ARRIAGA</h1>\n                </Col>\n            </Row>\n    </section>\n    \n    );\n}\nexport default MainBody;\n","import React from 'react';\nimport {Row, Col} from 'react-bootstrap';\n\nconst About = ({children, tower, nlp}) => {\n    return (\n        <section id=\"about\">\n            <h3 style={{position: 'absolute', display: 'inline-flex'}}>about me</h3>\n            {children}\n            <Row className=\"fullsize\" xs={1} md={3}>\n                <Col className=\"\">\n                        <Row xs={1} md={2} className=\"center\">\n                            <Col>\n                                <img className=\"about-img\" alt=\"placeholder for now!\" src={tower} width=\"150px\" height=\"150px\" />\n                            </Col>\n                            <Col>\n                                <p className=\"about-p\">\n                                    I am a 2020 <span><a href=\"http://utexas.edu\">University of Texas at Austin</a></span> graduate with a Major in <a href=\"https://liberalarts.utexas.edu/linguistics/\">Linguistics</a> and <a href=\"https://www.cs.utexas.edu/undergraduate-program/academics/elements-computing\">Certificate in Computer Science.</a>\n                                </p>\n                            </Col>\n                        </Row>\n                </Col>\n                <Col className=\"\">\n                    <Row className=\"center\" md={1}>\n                        <Col>\n                            <img className=\"about-img\" alt=\"web-dev\" src=\"https://cdn.pixabay.com/photo/2019/10/09/07/28/development-4536630_960_720.png\" width=\"250px\" height=\"250px\" />\n                        </Col>\n                        <Col>\n                            <p className=\"about-p\">My professional interests are Frontend Development and Machine Learning as applied to Natural Language Processing (NLP)</p>\n                        </Col>\n                    </Row>\n                </Col>\n                <Col className=\"\">\n                    <Row className=\"center\" xs={2}>\n                        <Col>\n                            <p className=\"about-p\">I plan to further my academic career in the future by pursuing a Masters in Computational Linguistics and Computer Science.</p>\n                        </Col>\n                        <Col>\n                            <img className=\"about-img\" alt=\"comp-lin\" src={nlp} width=\"150px\" height=\"150px\" />\n                        </Col>\n                    </Row>\n                \n                </Col>\n            </Row>\n        </section>\n    )\n}\n\nexport default About;","import React from 'react';\nimport ProgressBar from 'progressbar.js';\nimport {Container, Row, Col, Tabs, Tab} from 'react-bootstrap'\n\nconst capitalize = (s) => {\n    if (typeof s !== 'string') return ''\n    return s.charAt(0).toUpperCase() + s.slice(1)\n  }\n\nconst Skills = ({children}) => {\n    //  each language/skill will consist of level of comprehension and amount of experience working with it.\n    // amount of experience for each skill will be calculated based on the time spent working on projects over the total amount of time I have been programming.\n    let frontend = {\n        'skills' : {\n            'html': [0.90, 5], 'python': [0.90, 5], 'css': [0.85, 2.5], 'javascript': [0.65, 2], 'SQL': [0.5,0.5], 'java': [0.3, 0.5], 'swift': [0.3, 0.5]\n        },\n        'libraries': {\n            'react': [0.7, 0.5]\n\n        }\n     };\n\n    let skillset = {'frontend': frontend}\n\n    let skillMap = Object.keys(skillset.frontend.skills).map(skill =>\n            <span className=\"skillSpanContainer\" key={skill.toString()} >\n                <svg id={String('svg' + capitalize(skill))} xmlns=\"http://www.w3.org/2000/svg\" width=\"300\" height=\"100\" viewBox=\"0 0 300 100\">\n                    <path fillOpacity=\"0\" strokeWidth=\"1\" stroke=\"#bbb\" d=\"M 0 50 L 300 50 \" style={{borderRadius: '25px'}}/>\n                    <path id={String('svgPath' + capitalize(skill))} stroke=\"lightblue\" fill=\"none\" strokeWidth='10' fillOpacity=\"0\" d=\"M 0 50 L 300 50 \" style={{borderRadius: '25px'}}/>\n                    <text style={{font: '24px Montserrat', transform: 'translate(0, -10px)'}}>\n                        <textPath href={String('#svgPath' + capitalize(skill))}>{skill.toString()}</textPath>\n                    </text>\n                </svg>\n                <span style={{ margin: '8px',padding: '8px', color: 'white' }} className=\"badge bg-info rounded-pill\">{String(Object.values(skillset.frontend.skills[String(skill)])[0] * 100 +'%')}</span>\n            </span>\n        )\n\n    let libraryMap = Object.keys(skillset.frontend.libraries).map(library =>\n            <span className='skillSpanContainer' key={library.toString()}>\n                <svg id={String('svg' + capitalize(library))} xmlns=\"http://www.w3.org/2000/svg\" width=\"300\" height=\"100\" viewBox=\"0 0 300 100\">\n                    <path fillOpacity=\"0\" strokeWidth=\"1\" stroke=\"#bbb\" d=\"M 0 50 L 300 50 \" style={{borderRadius: '25px'}}/>\n                    <path id={String('svgPath' + capitalize(library))} stroke=\"lightblue\" fill=\"none\" strokeWidth='10' fillOpacity=\"0\" d=\"M 0 50 L 300 50 \" style={{borderRadius: '25px'}}/>\n                    <text style={{font: '24px Montserrat', transform: 'translate(0, -10px)'}}>\n                        <textPath href={String('#svgPath' + capitalize(library))}>{library.toString()}</textPath>\n                    </text>\n                </svg>\n                <span style={{ margin: '8px',padding: '8px', color: 'white' }} className=\"badge bg-info rounded-pill\">{String(Object.values(skillset.frontend.libraries[String(library)])[0] * 100 +'%')}</span>\n            </span>\n        )\n\n\n    React.useEffect(() => {\n        const animateSVGs = () => {\n            Object.keys(skillset.frontend.skills).map(skill => \n                new ProgressBar.Path(String('#svgPath' + capitalize(skill)), {\n                    easing: 'easeInOut',\n                    duration: 1400,\n                }).animate(Object.values(skillset.frontend.skills[String(skill)])[0])\n            );\n            Object.keys(skillset.frontend.libraries).map(library =>\n                new ProgressBar.Path(String('#svgPath' + capitalize(library)), {\n                    easing: 'easeInOut',\n                    duration: 1400,\n                }).animate(Object.values(skillset.frontend.libraries[String(library)])[0])\n            )\n        }\n        animateSVGs()\n\n    })\n\n    return (\n        <>\n            <section id=\"skills\">\n                <h3 style={{position: 'absolute', display: 'inline-flex'}}>my skillset</h3>\n                {children}\n                <Container>\n                    <Row>\n                        <Col>\n                            <Container id='skillsetDetailsContainer'>\n                                <Tabs defaultActiveKey=\"languages\" id=\"uncontrolled-tab-example\" style={{display: 'inline-flex'}}>\n                                    <Tab eventKey=\"languages\" title=\"languages\">\n                                        {skillMap}\n                                    </Tab>\n                                    <Tab eventKey=\"libraries\" title=\"libraries\">\n                                        {libraryMap}\n                                    </Tab>\n                                </Tabs>\n                            </Container>\n                        </Col>\n                    </Row>\n                </Container>\n\n            </section>\n        </>\n    )\n}\n\nexport default Skills;","import React from 'react';\n\nconst Projects = ({children}) => {\n    return (\n        <>\n            <section id=\"projects\">\n            <h3 style={{position: 'absolute', display: 'inline-flex'}}>my projects</h3>\n                {children}\n            </section>\n        </>\n    )\n}\n\nexport default Projects;","import React from 'react';\n\nconst Contact = ({children}) => {\n    return (\n        <>\n            <section id=\"contact\">\n            <h3 style={{position: 'absolute', display: 'inline-flex'}}>contact me!</h3>\n                {children}\n            </section>\n        </>\n    )\n}\n\nexport default Contact;","export default __webpack_public_path__ + \"static/media/portrait.c602c376.png\";","export default __webpack_public_path__ + \"static/media/UT-Tower.edec963e.png\";","export default __webpack_public_path__ + \"static/media/nlp.58382e0e.png\";","import React from 'react';\n\nimport WavySVG from './WavySVG.js';\nimport NavBar from './NavBar.js';\nimport Intro from './Intro.js';\nimport About from './About.js';\nimport Skills from './Skills.js';\nimport Projects from './Projects.js';\nimport Contact from './Contact.js';\nimport './LandingPage.scss';\nimport portrait from '../portrait.png';\nimport tower from '../UT-Tower.png';\nimport nlp from '../nlp.png';\n// import html2canvas from 'html2canvas';\n// import {canvasRGB} from 'stackblur-canvas';\n// import $ from 'jquery';\n\n// Limit the number of resize calls\nfunction debounce(fn, ms) {\n    let timer\n    return _ => {\n        clearTimeout(timer)\n        timer = setTimeout(_ => {\n            timer = null\n            fn.apply(this, arguments)\n        }, ms)\n    };\n}\n\nconst Portfolio = ({viewMode}) => {\n\n    React.useEffect(() => {\n\t\tconst debouncedStoreScroll = debounce(function storeScroll() {\n            document.documentElement.dataset.scroll = window.scrollY;\n        }, 25)\n        \n        // const renderBlurryNav = () => {\n        //     html2canvas(document.getElementById('root')).then(canvas => {\n        //         canvas.getContext('2d');\n        //         document.body.appendChild(canvas);\n                \n        //         canvasRGB(canvas, 0, 0, $('canvas').width(), $('canvas').height(), 23);\n                \n        //         var image = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\n        //         document.getElementById('pageNav').style.background = 'url(' + image + ')';\n        //     })\n        // }\n\n\t\tdocument.addEventListener('scroll', debouncedStoreScroll);\n\t\t// call scrollstate for the first time\n        debouncedStoreScroll();\n        // renderBlurryNav();\n        \n\n        return _ => { // this function is called after function called by useEffect\n        }\n    })\n\n    return (\n        <>\n\n            <NavBar>\n                <WavySVG isNav={true} fill={'#fff'} />\n            </NavBar>\n\n            <Intro portrait={portrait}/>\n\n            <About tower = {tower} nlp = {nlp}>\n                <WavySVG isNav={false} fill={'#fff'}/>\n            </About>\n\n            <Skills>\n                <WavySVG isNav={false} fill={'#fff'} />\n            </Skills>\n\n            <Projects>\n                <WavySVG isNav={false} fill={'#fff'}/>\n            </Projects>\n\n            <Contact>\n                <WavySVG isNav={false} fill={'#fff'} />\n            </Contact>\n        </>\n    );\n}\n\nexport default Portfolio;\n","import React from 'react';\nimport {withBreakpoints} from 'react-breakpoints';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.js';\n\nimport Portfolio from \"./components/Portfolio.js\";\n\n\nconst App = ({breakpoints, currentBreakpoint}) => {\n\t\n\t\n\tReact.useEffect(() => {\n\t\tif (breakpoints[currentBreakpoint] < breakpoints.mobileLandscape) {\n\t\t\tdocument.getElementsByTagName('html')[0].setAttribute('isMobile', true)\n\t\t\tdocument.getElementById('navCurveSVG').setAttribute('viewBox', '0 0 300 70')\n\t\t\tArray.from(document.getElementsByClassName('sectionCurveSVG')).map((sectionSVG) => sectionSVG.setAttribute('viewBox', '0 0 300 70'))\n\t\t} else {\n\t\t\tdocument.getElementsByTagName('html')[0].setAttribute('isMobile', false)\n\t\t\tdocument.getElementById('navCurveSVG').setAttribute('viewBox', '0 0 600 60')\n\t\t\tArray.from(document.getElementsByClassName('sectionCurveSVG')).map((sectionSVG) => sectionSVG.setAttribute('viewBox', '0 0 600 60'))\n\t\t}\n\t})\n\n\treturn (\n\t\t<>\n\t\t\t<Portfolio viewMode={breakpoints[currentBreakpoint] < breakpoints.mobileLandscape ? 'mobile' : 'mobileLandscape'} />\n\t\t</>\n\t)\n}\n\nexport default withBreakpoints(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactBreakpoints from 'react-breakpoints'\nimport './index.css';\nimport App from './App.js';\nimport * as serviceWorker from './serviceWorker';\n\nconst breakpoints = {\n    mobile: 991,\n    mobileLandscape: 992,\n    // tablet: 769,\n    // tabletLandscape: 1024,\n    desktop: 1200,\n    desktopLarge: 1500,\n    desktopWide: 1920,\n  }\n\nReactDOM.render(\n    // <React.StrictMode> \n    <ReactBreakpoints breakpoints={breakpoints}>\n        <App/>\n    </ReactBreakpoints>,\n    // </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
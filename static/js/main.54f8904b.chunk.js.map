{"version":3,"sources":["components/WindowSize.js","components/NavBar.js","components/MainBody.js","components/LandingPage.js","App.js","serviceWorker.js","index.js"],"names":["WindowSize","myWidth","myHeight","window","innerWidth","innerHeight","document","documentElement","clientWidth","clientHeight","body","button_style","NavBar","React","useEffect","Navbar","id","bg","variant","collapseOnSelect","expand","fixed","Brand","style","Toggle","aria-controls","Collapse","Nav","activeKey","className","Item","Link","href","MainBody","width","height","debounce","fn","ms","timer","_","clearTimeout","setTimeout","apply","arguments","LandingPage","useState","dimensions","setDimensions","debouncedHandleResize","debouncedStoreScroll","dataset","scroll","scrollY","addEventListener","removeEventListener","Container","Row","Col","lg","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.54f8904b.chunk.js","sourcesContent":["function WindowSize() {\n    var myWidth = 0, myHeight = 0;\n    if( typeof( window.innerWidth ) == 'number' ) {\n      //Non-IE\n      myWidth = window.innerWidth;\n      myHeight = window.innerHeight;\n    } else if( document.documentElement && ( document.documentElement.clientWidth || document.documentElement.clientHeight ) ) {\n      //IE 6+ in 'standards compliant mode'\n      myWidth = document.documentElement.clientWidth;\n      myHeight = document.documentElement.clientHeight;\n    } else if( document.body && ( document.body.clientWidth || document.body.clientHeight ) ) {\n      //IE 4 compatible\n      myWidth = document.body.clientWidth;\n      myHeight = document.body.clientHeight;\n    }\n    return {myWidth, myHeight};\n}\n\nexport default WindowSize;","import React from 'react';\nimport {Navbar, Nav} from 'react-bootstrap';\n\n\nlet button_style = {\n    \"color\" : \"#222222\",\n}\nconst NavBar = () => {\n    React.useEffect( () => {\n    })\n    return (\n        <>\n            <header></header>\n            <Navbar id=\"pageNav\" bg = \"transparent\" variant = \"light\" collapseOnSelect expand=\"lg\" fixed=\"top\">\n                <Navbar.Brand style={ button_style }>miguellangel</Navbar.Brand>\n                <Navbar.Toggle bg=\"primary\" aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav activeKey=\"/home\" className=\"justify-content-end\">\n                        <Nav.Item>\n                            <Nav.Link style = {button_style} href=\"/home\">HOME</Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item>\n                                <Nav.Link style = {button_style} href=\"#about\">ABOUT</Nav.Link>\n                        </Nav.Item>\n                    </Nav>\n                    <Nav>\n                        <Nav.Link href=\"#skills\">SKILLS</Nav.Link>\n                        <Nav.Link href=\"#projects\">PROJECTS</Nav.Link>\n                        <Nav.Link href=\"#contact\">CONTACT</Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n\n            \n        </>\n    )\n}\n\n\nexport default NavBar;","import React from 'react';\n// import { Nav, Button, Container, Row, Col } from \"react-bootstrap\";\n\nconst MainBody = ({width, height}) => {\n    return (\n        <>\n            <div id=\"intro\"\n                style={\n                    {\n                        \"width\": \"100%\",\n                        \"height\": height,\n                        \"margin-top\": '73px',\n                    }\n            }>\n                <p>With iOS7 Apple introduced a completely new design for the 6 year old OS. Among all the changes, one that really caught everyone's attention was the blurred background effect. Basically some parts of the UI get a nice frosted glass effect. There are a couple of ways to achieve this effect using HTML and CSS. The easiest way is to use CSS filters, however the performance on phones is far from usable. With that in mind I decided to experiment with Canvas and the result was quite good.</p>\n                <p>Quisque rutrum. Aenean imperdiet. Etiam ultricies nisi vel augue. Curabitur ullamcorper ultricies nisi. Nam eget dui. Etiam rhoncus. Maecenas tempus, tellus eget condimentum rhoncus, sem quam semper libero, sit amet adipiscing sem neque sed ipsum. Nam quam nunc, blandit vel, luctus pulvinar, hendrerit id, lorem. Maecenas nec odio et ante tincidunt tempus. Donec vitae sapien ut libero venenatis faucibus. Nullam quis ante. Etiam sit amet orci eget eros faucibus tincidunt. Duis leo. Sed fringilla mauris sit amet nibh. Donec sodales sagittis magna. Sed consequat, leo eget bibendum sodales, augue velit cursus nunc, quis gravida magna mi a libero. Fusce vulputate eleifend sapien. Vestibulum purus quam, scelerisque ut, mollis sed, nonummy id, metus. Nullam accumsan lorem in dui. Cras ultricies mi eu turpis hendrerit fringilla. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; In ac dui quis mi consectetuer lacinia. Nam pretium turpis et arcu. Duis arcu tortor, suscipit eget, imperdiet nec, imperdiet iaculis, ipsum. Sed aliquam ultrices mauris. Integer ante arcu, accumsan a, consectetuer eget, posuere ut, mauris. Praesent adipiscing. Phasellus ullamcorper ipsum rutrum nunc. Nunc nonummy metus. Vestibulum volutpat pretium libero. Cras id dui. Aenean ut eros et nisl sagittis vestibulum. Nullam nulla eros, ultricies sit amet, nonummy id, imperdiet feugiat, pede. Sed lectus. Donec mollis hendrerit risus. Phasellus nec sem in justo pellentesque facilisis. Etiam imperdiet imperdiet orci. Nunc nec neque. Phasellus leo dolor, tempus non, auctor et, hendrerit quis, nisi. Curabitur ligula sapien, tincidunt non, euismod vitae, posuere imperdiet, leo. Maecenas malesuada. Praesent congue erat at massa. Sed cursus turpis vitae tortor. Donec posuere vulputate arcu. Phasellus accumsan cursus velit. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Sed aliquam, nisi quis porttitor congue, elit erat euismod orci, ac placerat dolor lectus quis orci. Phasellus consectetuer vestibulum elit. Aenean tellus metus, bibendum sed, posuere ac, mattis non, nunc. Vestibulum fringilla pede sit amet augue. In turpis. Pellentesque posuere. Praesent turpis. Aenean posuere, tortor sed cursus feugiat, nunc augue blandit nunc, eu sollicitudin urna dolor sagittis lacus. Donec elit libero, sodales nec, volutpat a, suscipit non, turpis. Nullam sagittis. Suspendisse pulvinar, augue ac venenatis condimentum, sem libero volutpat nibh, nec pellentesque velit pede quis nunc. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Fusce id purus. Ut varius tincidunt libero. Phasellus dolor. Maecenas vestibulum mollis.</p>\n                <p>Quisque rutrum. Aenean imperdiet. Etiam ultricies nisi vel augue. Curabitur ullamcorper ultricies nisi. Nam eget dui. Etiam rhoncus. Maecenas tempus, tellus eget condimentum rhoncus, sem quam semper libero, sit amet adipiscing sem neque sed ipsum. Nam quam nunc, blandit vel, luctus pulvinar, hendrerit id, lorem. Maecenas nec odio et ante tincidunt tempus. Donec vitae sapien ut libero venenatis faucibus. Nullam quis ante. Etiam sit amet orci eget eros faucibus tincidunt. Duis leo. Sed fringilla mauris sit amet nibh. Donec sodales sagittis magna. Sed consequat, leo eget bibendum sodales, augue velit cursus nunc, quis gravida magna mi a libero. Fusce vulputate eleifend sapien. Vestibulum purus quam, scelerisque ut, mollis sed, nonummy id, metus. Nullam accumsan lorem in dui. Cras ultricies mi eu turpis hendrerit fringilla. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; In ac dui quis mi consectetuer lacinia. Nam pretium turpis et arcu. Duis arcu tortor, suscipit eget, imperdiet nec, imperdiet iaculis, ipsum. Sed aliquam ultrices mauris. Integer ante arcu, accumsan a, consectetuer eget, posuere ut, mauris. Praesent adipiscing. Phasellus ullamcorper ipsum rutrum nunc. Nunc nonummy metus. Vestibulum volutpat pretium libero. Cras id dui. Aenean ut eros et nisl sagittis vestibulum. Nullam nulla eros, ultricies sit amet, nonummy id, imperdiet feugiat, pede. Sed lectus. Donec mollis hendrerit risus. Phasellus nec sem in justo pellentesque facilisis. Etiam imperdiet imperdiet orci. Nunc nec neque. Phasellus leo dolor, tempus non, auctor et, hendrerit quis, nisi. Curabitur ligula sapien, tincidunt non, euismod vitae, posuere imperdiet, leo. Maecenas malesuada. Praesent congue erat at massa. Sed cursus turpis vitae tortor. Donec posuere vulputate arcu. Phasellus accumsan cursus velit. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Sed aliquam, nisi quis porttitor congue, elit erat euismod orci, ac placerat dolor lectus quis orci. Phasellus consectetuer vestibulum elit. Aenean tellus metus, bibendum sed, posuere ac, mattis non, nunc. Vestibulum fringilla pede sit amet augue. In turpis. Pellentesque posuere. Praesent turpis. Aenean posuere, tortor sed cursus feugiat, nunc augue blandit nunc, eu sollicitudin urna dolor sagittis lacus. Donec elit libero, sodales nec, volutpat a, suscipit non, turpis. Nullam sagittis. Suspendisse pulvinar, augue ac venenatis condimentum, sem libero volutpat nibh, nec pellentesque velit pede quis nunc. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Fusce id purus. Ut varius tincidunt libero. Phasellus dolor. Maecenas vestibulum mollis.</p>\n            </div>\n        </>\n    );\n}\nexport default MainBody;\n","import React, {useState} from 'react';\nimport {Container, Row, Col} from \"react-bootstrap\";\nimport WindowSize from \"./WindowSize.js\";\n// import SideBar from './SideBar.js';\nimport NavBar from './NavBar.js';\nimport MainBody from './MainBody.js';\nimport './LandingPage.scss';\n\n// Limit the number of resize calls\nfunction debounce(fn, ms) {\n    let timer\n    return _ => {\n        clearTimeout(timer)\n        timer = setTimeout(_ => {\n            timer = null\n            fn.apply(this, arguments)\n        }, ms)\n    };\n}\n\nconst LandingPage = () => {\n    const [dimensions, setDimensions] = useState({width: WindowSize().myWidth, height: WindowSize().myHeight})\n\n    React.useEffect(() => {\n        const debouncedHandleResize = debounce(function handleResize() {\n            setDimensions({width: WindowSize().myWidth, height: WindowSize().myHeight})\n\t\t}, 500)\n\t\t\n\t\tconst debouncedStoreScroll = debounce(function storeScroll() {\n\t\t\tdocument.documentElement.dataset.scroll = window.scrollY;\n\t\t}, 25)\n\n\n\t\twindow.addEventListener('resize', debouncedHandleResize);\n\t\tdocument.addEventListener('scroll', debouncedStoreScroll);\n\t\t// call scrollstate for the first time\n\t\tdebouncedStoreScroll();\n\n        return _ => { // this function is called after function called by useEffect\n            window.removeEventListener('resize', debouncedHandleResize);\n        }\n    })\n\n    return (\n        <>\n            <NavBar/>\n            <Container>\n                <Row>\n                    <Col lg={12}>\n                        <MainBody width={\n                                dimensions.width\n                            }\n                            height={\n                                dimensions.height\n                            }/>\n                    </Col>\n                </Row>\n            </Container>\n        </>\n    );\n}\n\nexport default LandingPage;\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport LandingPage from \"./components/LandingPage.js\";\n\n\nfunction App() {\n\treturn (\n\t\t<LandingPage/>\n\t)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    // <React.StrictMode> \n    <App/>,\n    // </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["components/NavBar.js","components/Intro.js","components/About.js","components/WavySVG.js","components/Skills.js","components/Projects.js","components/Contact.js","portrait.png","UT-Tower.png","nlp.png","components/LandingPage.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","scrollToView","sectionId","document","querySelector","scrollIntoView","behavior","$","collapse","getElementById","previousElementSibling","trigger","React","useEffect","Navbar","id","bg","variant","collapseOnSelect","expand","fixed","Container","Brand","Toggle","aria-controls","Collapse","className","Nav","activeKey","Item","Link","onClick","MainBody","portrait","Row","xs","md","Col","src","alt","About","tower","nlp","width","height","href","WavySVG","anime","targets","d","easing","duration","loop","direction","style","backgroundColor","viewBox","preserveAspectRatio","xmlns","fill","transform","Skills","Projects","Contact","LandingPage","debouncedStoreScroll","fn","ms","timer","_","clearTimeout","setTimeout","apply","arguments","debounce","documentElement","dataset","scroll","window","scrollY","addEventListener","Intro","App","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.45056669.chunk.js","sourcesContent":["import React from 'react';\nimport {Navbar, Nav, Container} from 'react-bootstrap';\nimport $ from 'jquery';\n\n\n\nconst NavBar = () => {\n    const scrollToView = (sectionId) => {\n        document.querySelector(sectionId).scrollIntoView({\n            behavior: \"smooth\"\n        });\n\n        $('.navbar-collapse').collapse('toggle');\n        // trigger a click automatically so user does not end up having to click twice for nav to expand again\n        $(document.getElementById('responsive-navbar-nav').previousElementSibling).trigger('click');\n    };\n    React.useEffect( () => {\n    })\n    return (\n        <Navbar id=\"pageNav\" bg = \"transparent\" variant = \"light\" collapseOnSelect={true} expand=\"lg\" fixed=\"top\">\n            <Container>\n                <Navbar.Brand>miguellangel</Navbar.Brand>                \n\n            </Container>\n            <Navbar.Toggle bg=\"primary\" aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Container className=\"justify-content-end\">\n                    <Nav activeKey=\"/home\" >\n                        <Nav.Item>\n                            <Nav.Link onClick={() => scrollToView(\"#main\")} >HOME</Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item>\n                            <Nav.Link onClick={() => scrollToView(\"#about\")} >ABOUT</Nav.Link>\n                        </Nav.Item>\n                        <Nav.Link onClick={() => scrollToView(\"#skills\")} >SKILLS</Nav.Link>\n                        <Nav.Link onClick={() => scrollToView(\"#projects\")} >PROJECTS</Nav.Link>\n                        <Nav.Link onClick={() => scrollToView(\"#contact\")} >CONTACT</Nav.Link>\n                    </Nav>\n\n                </Container>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n\n\nexport default NavBar;","import React from 'react';\nimport {Row, Col} from \"react-bootstrap\";\n\nconst MainBody = ({portrait}) => {\n    return (\n        // <Container className=\"fullsize\">\n            <Row  className=\"fullsize\" id=\"intro\" xs={1} md={2}>\n                <Col>\n                    {/* <Container style={{width: \"100%\", height: \"100%\"}}> */}\n                        <img id=\"portrait\" src={portrait} alt=\"This is me: Miguel Arriaga\" />\n                    {/* </Container> */}\n                </Col>\n                <Col>\n                    <h4 className=\"center el\">THIS IS ME</h4>\n                    <h1 className=\"center el\">MIGUEL ARRIAGA</h1>\n                </Col>\n            </Row>\n    // </Container>\n    \n    );\n}\nexport default MainBody;\n","import React from 'react';\nimport {Container, Row, Col} from 'react-bootstrap';\n\nconst About = ({tower, nlp}) => {\n    return (\n        <>\n            <Container className=\"fullsize\">\n                <Row className=\"fullsize\" xs={1} md={3}>\n                    <Col className=\"\">\n                            <Row xs={1} md={2} className=\"center\">\n                                <Col>\n                                    <img className=\"about-img\" alt=\"placeholder for now!\" src={tower} width=\"150px\" height=\"150px\" />\n                                </Col>\n                                <Col>\n                                    <p className=\"about-p\">\n                                        I am a 2020 <span><a href=\"http://utexas.edu\">University of Texas at Austin</a></span> graduate with a Major in <a href=\"https://liberalarts.utexas.edu/linguistics/\">Linguistics</a> and <a href=\"https://www.cs.utexas.edu/undergraduate-program/academics/elements-computing\">Certificate in Computer Science.</a>\n                                    </p>\n                                </Col>\n                            </Row>\n                    </Col>\n                    <Col className=\"\">\n                        <Row className=\"center\" md={1}>\n                            <Col>\n                                <img className=\"about-img\" alt=\"web-dev\" src=\"https://cdn.pixabay.com/photo/2019/10/09/07/28/development-4536630_960_720.png\" width=\"250px\" height=\"250px\" />\n                            </Col>\n                            <Col>\n                                <p className=\"about-p\">My professional interests are in Frontend Development and Machine Learning as applied to Natural Language Processing (NLP)</p>\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col className=\"\">\n                        <Row className=\"center\">\n                            <Col>\n                                <p className=\"about-p\">I plan to further my academic career in the future by pursuing a Masters in Computational Linguistics and Computer Science.</p>\n                            </Col>\n                            <Col>\n                                <img className=\"about-img\" alt=\"comp-lin\" src={nlp} width=\"150px\" height=\"150px\" />\n                            </Col>\n                        </Row>\n                    \n                    </Col>\n                </Row>\n\n            </Container>\n        </>\n    )\n}\n\nexport default About;","import React from 'react';\nimport anime from 'animejs/lib/anime.es.js';\n\nconst WavySVG = () => {\n    React.useEffect(() => {\n        var morphing = anime({\n            targets: 'svg path',\n            d: 'M 0 60 C 0 60 210 0 300 30 C 510 60 510 0 600 30 C 690 60 810 0 900 60 Z',\n            easing: 'easeInOutSine',\n            duration: 2000,\n            loop: true,  \n            direction: 'alternate'\n          });\n\n    })\n    return (\n        <>\n            <svg style={{backgroundColor: \"#F2F4F9\"}} width=\"100%\" height=\"60\" viewBox=\"0 0 600 60\" preserveAspectRatio=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                {/* <!-- Created with SVG-edit - http://svg-edit.googlecode.com/ --> */}\n                <g>\n                    <path id=\"svg_4\" d=\"M 0 60 C 90 0 210 60 300 30 C 390 0 510 60 600 30 C 690 0 810 60 900 60 Z\" fill=\"#fff\"/>\n                </g>\n            </svg>\n            <div style={{width:\"100%\", height:\"300px\", backgroundColor:\"white\", transform:\"translate(0%,87)\"}}></div>\n        </>\n    )\n}\n\nexport default WavySVG;","import React from 'react';\nimport WavySVG from './WavySVG.js';\n// import ProgressBar from 'progressbar.js';\n\nconst Skills = () => {\n    \n    React.useEffect(() => {\n        // var line = new ProgressBar.Line('#lineContainer');\n        // line.animate();\n\n    })\n    // var ProgressBar = require('progressbar.js')\n    return (\n        <>\n        <WavySVG />\n        </>\n    )\n}\n\nexport default Skills;","import React from 'react';\n\nconst Projects = () => {\n    return (\n        <></>\n    )\n}\n\nexport default Projects;","import React from 'react';\n\nconst Contact = () => {\n    return (\n        <></>\n    )\n}\n\nexport default Contact;","export default __webpack_public_path__ + \"static/media/portrait.c602c376.png\";","export default __webpack_public_path__ + \"static/media/UT-Tower.edec963e.png\";","export default __webpack_public_path__ + \"static/media/nlp.58382e0e.png\";","import React from 'react';\nimport {Container} from \"react-bootstrap\";\nimport NavBar from './NavBar.js';\nimport Intro from './Intro.js';\nimport About from './About.js';\nimport Skills from './Skills.js';\nimport Projects from './Projects.js';\nimport Contact from './Contact.js';\nimport './LandingPage.scss';\nimport portrait from '../portrait.png';\nimport tower from '../UT-Tower.png';\nimport nlp from '../nlp.png';\n// import html2canvas from 'html2canvas';\n// import {canvasRGB} from 'stackblur-canvas';\n// import $ from 'jquery';\n\n// Limit the number of resize calls\nfunction debounce(fn, ms) {\n    let timer\n    return _ => {\n        clearTimeout(timer)\n        timer = setTimeout(_ => {\n            timer = null\n            fn.apply(this, arguments)\n        }, ms)\n    };\n}\n\nconst LandingPage = () => {\n\n    React.useEffect(() => {\n\t\t\n\t\tconst debouncedStoreScroll = debounce(function storeScroll() {\n            document.documentElement.dataset.scroll = window.scrollY;\n        }, 25)\n        \n        // const renderBlurryNav = () => {\n        //     html2canvas(document.getElementById('root')).then(canvas => {\n        //         canvas.getContext('2d');\n        //         document.body.appendChild(canvas);\n                \n        //         canvasRGB(canvas, 0, 0, $('canvas').width(), $('canvas').height(), 23);\n                \n        //         var image = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\n        //         document.getElementById('pageNav').style.background = 'url(' + image + ')';\n        //     })\n        // }\n\n\t\tdocument.addEventListener('scroll', debouncedStoreScroll);\n\t\t// call scrollstate for the first time\n        debouncedStoreScroll();\n        // renderBlurryNav();\n        \n\n        return _ => { // this function is called after function called by useEffect\n        }\n    })\n\n    return (\n        <>\n            <NavBar/>\n            <section id=\"main\" >\n                <Intro portrait={portrait}/>\n            </section>\n            <section id=\"about\">\n                <About tower = {tower} nlp=  {nlp}/>\n            </section>\n            <section id=\"skills\" >\n                <Container >\n                    <Skills />\n                </Container>\n            </section>\n            <section id=\"projects\" >\n                <Container >\n                    <Projects />\n                </Container>\n            </section>\n            <section id=\"contact\" >\n                <Container >\n                    <Contact />\n                </Container>\n\n            </section>\n        </>\n    );\n}\n\nexport default LandingPage;\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.js';\n\nimport LandingPage from \"./components/LandingPage.js\";\n\n\nfunction App() {\n\treturn (\n\t\t<LandingPage/>\n\t)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    // <React.StrictMode> \n    <App/>,\n    // </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["portrait.png","components/WindowSize.js","components/NavBar.js","components/Intro.js","components/About.js","components/Skills.js","components/Projects.js","components/Contact.js","components/LandingPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","WindowSize","myWidth","myHeight","window","innerWidth","innerHeight","document","documentElement","clientWidth","clientHeight","body","button_style","NavBar","React","useEffect","Navbar","id","bg","variant","collapseOnSelect","expand","fixed","Brand","style","Toggle","aria-controls","Collapse","Container","className","Nav","activeKey","Item","Link","href","MainBody","class","About","Skills","Projects","Contact","debounce","fn","ms","timer","_","clearTimeout","setTimeout","apply","arguments","LandingPage","useState","width","height","setDimensions","debouncedHandleResize","debouncedStoreScroll","dataset","scroll","scrollY","addEventListener","removeEventListener","Row","Col","src","portrait","alt","Intro","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.736b7ae9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/portrait.3c905d7e.png\";","function WindowSize() {\n    var myWidth = 0, myHeight = 0;\n    if( typeof( window.innerWidth ) == 'number' ) {\n      //Non-IE\n      myWidth = window.innerWidth;\n      myHeight = window.innerHeight;\n    } else if( document.documentElement && ( document.documentElement.clientWidth || document.documentElement.clientHeight ) ) {\n      //IE 6+ in 'standards compliant mode'\n      myWidth = document.documentElement.clientWidth;\n      myHeight = document.documentElement.clientHeight;\n    } else if( document.body && ( document.body.clientWidth || document.body.clientHeight ) ) {\n      //IE 4 compatible\n      myWidth = document.body.clientWidth;\n      myHeight = document.body.clientHeight;\n    }\n    return {myWidth, myHeight};\n}\n\nexport default WindowSize;","import React from 'react';\nimport {Navbar, Nav, Container} from 'react-bootstrap';\n\n\nlet button_style = {\n    \"color\" : \"#222222\",\n}\nconst NavBar = () => {\n    React.useEffect( () => {\n    })\n    return (\n        <Navbar id=\"pageNav\" bg = \"transparent\" variant = \"light\" collapseOnSelect expand=\"lg\" fixed=\"top\">\n            <Navbar.Brand style={ button_style }>miguellangel</Navbar.Brand>                \n            <Navbar.Toggle bg=\"primary\" aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Container className=\"justify-content-end\">\n                    <Nav activeKey=\"/home\" >\n                        <Nav.Item>\n                            <Nav.Link style={button_style} href=\"/home\">HOME</Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item>\n                            <Nav.Link style={button_style} href=\"#about\">ABOUT</Nav.Link>\n                        </Nav.Item>\n                        <Nav.Link href=\"#skills\">SKILLS</Nav.Link>\n                        <Nav.Link href=\"#projects\">PROJECTS</Nav.Link>\n                        <Nav.Link href=\"#contact\">CONTACT</Nav.Link>\n                    </Nav>\n\n                </Container>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n\n\nexport default NavBar;","import React from 'react';\nimport {Container} from \"react-bootstrap\";\n\nconst MainBody = () => {\n    return (\n        <Container id=\"intro\" className=\"fullsize center\">\n            <h4>THIS IS ME</h4>\n            <h1>MIGUEL ARRIAGA</h1>\n            <div>\n                <a href=\"#about\" class=\"btn btn-primary\">Learn more about me!</a>                \n            </div>\n        </Container>\n    );\n}\nexport default MainBody;\n","import React from 'react';\n\nconst About = () => {\n    return (\n        <>\n            Hello there!\n        </>\n    )\n}\n\nexport default About;","import React from 'react';\n\nconst Skills = () => {\n    return (\n        <></>\n    )\n}\n\nexport default Skills;","import React from 'react';\n\nconst Projects = () => {\n    return (\n        <></>\n    )\n}\n\nexport default Projects;","import React from 'react';\n\nconst Contact = () => {\n    return (\n        <></>\n    )\n}\n\nexport default Contact;","import React, {useState} from 'react';\nimport {Container, Row, Col} from \"react-bootstrap\";\nimport WindowSize from \"./WindowSize.js\";\n// import SideBar from './SideBar.js';\nimport NavBar from './NavBar.js';\nimport Intro from './Intro.js';\nimport About from './About.js';\nimport Skills from './Skills.js';\nimport Projects from './Projects.js';\nimport Contact from './Contact.js';\nimport './LandingPage.scss';\nimport portrait from '../portrait.png';\n\n// Limit the number of resize calls\nfunction debounce(fn, ms) {\n    let timer\n    return _ => {\n        clearTimeout(timer)\n        timer = setTimeout(_ => {\n            timer = null\n            fn.apply(this, arguments)\n        }, ms)\n    };\n}\n\nconst LandingPage = () => {\n    const [dimensions, setDimensions] = useState({width: WindowSize().myWidth, height: WindowSize().myHeight})\n\n    React.useEffect(() => {\n        const debouncedHandleResize = debounce(function handleResize() {\n            setDimensions({width: WindowSize().myWidth, height: WindowSize().myHeight})\n\t\t}, 500)\n\t\t\n\t\tconst debouncedStoreScroll = debounce(function storeScroll() {\n            document.documentElement.dataset.scroll = window.scrollY;\n\t\t}, 25)\n\n\n\t\twindow.addEventListener('resize', debouncedHandleResize);\n\t\tdocument.addEventListener('scroll', debouncedStoreScroll);\n\t\t// call scrollstate for the first time\n\t\tdebouncedStoreScroll();\n\n        return _ => { // this function is called after function called by useEffect\n            window.removeEventListener('resize', debouncedHandleResize);\n        }\n    })\n\n    return (\n        <>\n            <NavBar/>\n            <section id=\"main\" >\n                <Container className=\"fullsize\">\n                    <Row className=\"fullsize\">\n                        <Col className=\"justify-content-center\">\n                            <Container style={{width: \"100%\", height: \"100%\"}}>\n                                <img id=\"portrait\" src={portrait} alt=\"This is me: Miguel Arriaga\" />\n                            </Container>\n                        </Col>\n                        <Col>\n                            <Intro />\n                        </Col>\n                    </Row>\n                </Container>\n            </section>\n            <section id=\"about\">\n                <About />\n            </section>\n            <section id=\"skills\" >\n                <Container >\n                    <Skills />\n                </Container>\n            </section>\n            <section id=\"projects\" >\n                <Container >\n                    <Projects />\n                </Container>\n            </section>\n            <section id=\"contact\" >\n                <Container >\n                    <Contact />\n                </Container>\n\n            </section>\n        </>\n    );\n}\n\nexport default LandingPage;\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport LandingPage from \"./components/LandingPage.js\";\n\n\nfunction App() {\n\treturn (\n\t\t<LandingPage/>\n\t)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    // <React.StrictMode> \n    <App/>,\n    // </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}